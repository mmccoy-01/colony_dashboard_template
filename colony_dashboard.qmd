---
title: "Mouse Colony"
author: "Michael McCoy"
logo: "https://yt3.googleusercontent.com/ytc/APkrFKbprBkcDrFaaYruHcnwzSgxUJV2N0799D788ar6dQ=s900-c-k-c0x00ffffff-no-rj"
nav-buttons:
- icon: github
  href: https://github.com/mmccoy-01
- icon: linkedin
  href: https://www.linkedin.com/in/themichaelmccoy
format: 
  dashboard:
    orientation: columns
    theme:
      light: cerulean
      dark: darkly
server: shiny
---

```{r Setup}
#| context: setup

pkg_list <- c(
  "knitr", "tidyverse", "shiny", "magick", "rsvg", "DT",
  "scales", "plotly", "survival", "survminer", "jmv"
)

# Function to install and load packages
load_packages <- function(pkg_list) {
  for (pkg in pkg_list) {
    if (!require(pkg, character.only = TRUE)) {
      install.packages(pkg, dependencies = TRUE)
      library(pkg, character.only = TRUE)
    }
  }
}

load_packages(pkg_list)

# library(knitr) # for kable table formatting
# library(tidyverse) # tidyverse
# library(shiny) # shiny app functionality
# library(DT) # for rendering tables
# library(scales) # scale functions for customizing visualizations
# library(plotly) # interactive cursor friendly plots
# library(survival) # for survival curves
# library(survminer) # for survival curves
# library(jmv) # performing statistical analyses

#setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# To capture manifest.json
#rsconnect::writeManifest()

# Calculate number of breeder cages
breeder_cage_count <- read.csv("data/raw/raw_data.csv") %>%
  filter(status == "breeder") %>% 
  summarize(unique_cages = n_distinct(cage_number))

# Calculate number of colony cages
colony_cage_count <- read.csv("data/raw/raw_data.csv") %>%
  filter(status == "weanling") %>% 
  summarize(unique_cages = n_distinct(cage_number))
```

# Room

## Column

```{r Breeders}
#|title: "Breeders"

# Load data
raw_data <- read.csv("data/raw/raw_data.csv")

# Select the desired columns
raw_data <- raw_data %>%
  filter(status == "breeder", weaned == "") %>% 
  arrange(cage_number)

# Create an interactive DataTable
datatable(raw_data)
```

There are `{r} breeder_cage_count` breeder cages as of `r format(Sys.Date(), "%A, %B %d, %Y")`.

```{r Litters}
#| title: "Litters"

# Load data
raw_data <- read.csv("data/raw/raw_data.csv") %>%
  filter(status == "breeder",
         dob_litter != "",
         weaned == ""
         )

# Calculate the difference in days between today's date and the `wean_date`
today <- Sys.Date()


# Convert `wean_date` to Date format and apply calculation
raw_data %>%
  arrange(cage_number) %>% 
  mutate(wean_date = as.Date(wean_date, format = "%Y-%m-%d"),
         days_to_wean = as.numeric(wean_date - today),
         message = paste0("Cage ", cage_number, 
                          " has ", litter_size, 
                          " pups ready to be weaned in ", days_to_wean, 
                          " days on ", wean_date, ".")) %>%
  pull(message) %>%
  walk(cat, "\n")
```

## Column

```{r Weanlings}
#|title: "Weanlings"

# Load data
raw_data <- read.csv("data/raw/raw_data.csv")

# Select the desired columns and add a weeks_old column
raw_data <- raw_data %>%
  filter(status == "weanling") %>%
  mutate(weeks_old = round(as.numeric(difftime(Sys.Date(), as.Date(dob), units = "weeks")), 1)) %>% 
  relocate(weeks_old, .after = dob)

# Create an interactive DataTable
datatable(raw_data)
```

There are `r colony_cage_count` colony cages as of `r format(Sys.Date(), "%A, %B %d, %Y")`.

```{r Colony Mice}
#| title: "Colony mice"

# Load data
read.csv("data/raw/raw_data.csv") %>%
  filter(status == "weanling") %>%
  mutate(dob = as.Date(dob, format = "%Y-%m-%d"),
         days_old = as.numeric(Sys.Date() - dob)) %>%
  group_by(status, sex) %>%
  summarise(
    total_mice_by_sex = sum(num_of_mice_in_cage, na.rm = TRUE), 
    avg_days_old = mean(days_old, na.rm = TRUE),  # Calculate the average days old by sex
    .groups = "drop"
  ) %>%
  summarize(
    total_mice = sum(total_mice_by_sex, na.rm = TRUE),
    female = sum(total_mice_by_sex[sex == "female"], na.rm = TRUE),
    male = sum(total_mice_by_sex[sex == "male"], na.rm = TRUE),
    weighted_avg_days_old = sum(total_mice_by_sex * avg_days_old) / total_mice,  # Weighted average of days old
    avg_weeks_old = round(weighted_avg_days_old / 7, 1)  # Convert days to weeks and round
  ) %>%
  mutate(
    message = paste0("You have ", total_mice, 
                     " mice (", female, " female and ", male, 
                     " male) that are about ", avg_weeks_old, " weeks old.")
  ) %>%
  pull(message) %>%
  cat("\n")
```